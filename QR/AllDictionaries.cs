using System.Collections.Generic;


namespace QR
{
    public class AllDictionaries
    {
        public static int AlphanumericDictionary(char keyValue)
        {
            Dictionary<char, int> AD = new Dictionary<char, int>
            {

                {'0', 0 },
                {'1', 1 },
                {'2', 2 },
                {'3', 3 },
                {'4', 4 },
                {'5', 5 },
                {'6', 6 },
                {'7', 7 },
                {'8', 8 },
                {'9', 9 },
                {'A', 10 },
                {'B', 11 },
                {'C', 12 },
                {'D', 13 },
                {'E', 14 },
                {'F', 15 },
                {'G', 16 },
                {'H', 17 },
                {'I', 18 },
                {'J', 19 },
                {'K', 20 },
                {'L', 21 },
                {'M', 22 },
                {'N', 23 },
                {'O', 24 },
                {'P', 25 },
                {'Q', 26 },
                {'R', 27 },
                {'S', 28 },
                {'T', 29 },
                {'U', 30 },
                {'V', 31 },
                {'W', 32 },
                {'X', 33 },
                {'Y', 34 },
                {'Z', 35 },
                {' ', 36 },
                {'$', 37 },
                {'%', 38 },
                {'*', 39 },
                {'+', 40 },
                {'-', 41 },
                {'.', 42 },
                {'/', 43 },
                {':', 44 },
            };
            return AD[keyValue];

        }


        public static int SizeDictionary(int keyValue)
        {
            int[] size = new int[40];
            int first = 21;
            for (int i = 0; i < 40; i++)
            {
                size[i] = first;
                first += 4;
            }
            return size[keyValue];

        }


        public static int[] PolynomialDict(int keyValue)
        {
            Dictionary<int, int[]> PD = new Dictionary<int, int[]>
            {
                {7, new int[] {87, 229, 146, 149, 238, 102, 21} },
                {10, new int[] {251, 67, 46, 61, 118, 70, 64, 94, 32, 45} },
                {13, new int[] {74, 152, 176, 100, 86, 100, 106, 104, 130, 218, 206, 140, 78} },
                {15, new int[] {8, 183, 61, 91, 202, 37, 51, 58, 58, 237, 140, 124, 5, 99, 105} },
                {16, new int[] {120, 104, 107, 109, 102, 161, 76, 3, 91, 191, 147, 169, 182, 194, 225, 120} },
                {17, new int[] {43, 139, 206, 78, 43, 239, 123, 206, 214, 147, 24, 99, 150, 39, 243, 163, 136} },
                {18, new int[] {215, 234, 158, 94, 184, 97, 118, 170, 79, 187, 152, 148, 252, 179, 5, 98, 96, 153} },
                {20, new int[] {17, 60, 79, 50, 61, 163, 26, 187, 202, 180, 221, 225, 83, 239, 156, 164, 212, 212, 188, 190} },
                {22, new int[] {210, 171, 247, 242, 93, 230, 14, 109, 221, 53, 200, 74, 8, 172, 98, 80, 219, 134, 160, 105, 165, 231} },
                {24, new int[] {229, 121, 135, 48, 211, 117, 251, 126, 159, 180, 169, 152, 192, 226, 228, 218, 111, 0, 117, 232, 87, 96, 227, 21} },
                {26, new int[] {173, 125, 158, 2, 103, 182, 118, 17, 145, 201, 111, 28, 165, 53, 161, 21, 245, 142, 13, 102, 48, 227, 153, 145, 218, 70} },
                {28, new int[] {168, 223, 200, 104, 224, 234, 108, 180, 110, 190, 195, 147, 205, 27, 232, 201, 21, 43, 245, 87, 42, 195, 212, 119, 242, 37, 9, 123} },
                {30, new int[] {41, 173, 145, 152, 216, 31, 179, 182, 50, 48, 110, 86, 239, 96, 222, 125, 42, 173, 226, 193, 224, 130, 156, 37, 251, 216, 238, 40, 192, 180} },
            };
            return PD[keyValue];

        }
    }
}
